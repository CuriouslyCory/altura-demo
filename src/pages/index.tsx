import { type NextPage } from "next";
import Head from "next/head";
import type { ChangeEvent } from "react";
import { useEffect, useState } from "react";
import type { ItemProperty } from "../types/item";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [address, setAddress] = useState("");
  const [alturaGuard, setAlturaGuard] = useState("");
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  const item = trpc.altura.getItem.useQuery({ itemId: 2 });
  const user = trpc.altura.getUser.useQuery(
    { address },
    { enabled: isAuthenticated }
  );
  const verifiyAlturaGuard = trpc.altura.verifyAultraGuard.useMutation();

  useEffect(() => {
    console.log("items", item);
  }, [item]);

  useEffect(() => {
    console.log("user", user);
  }, [user]);

  useEffect(() => {
    console.log("t1");
    if (address.length < 42 || alturaGuard.length < 6) return;
    console.log("t2");
    verifiyAlturaGuard
      .mutateAsync({ address, alturaGuard })
      .then((resp: boolean) => {
        console.log("is this authenticated?", resp);
        setIsAuthenticated(resp);
      });
  }, [address, alturaGuard]);

  const onAddressChange = (event: ChangeEvent<HTMLInputElement>) => {
    console.log("event target", event.target.value);
    setAddress(event.target.value);
  };

  const onCodeChange = (event: ChangeEvent<HTMLInputElement>) => {
    console.log("event target", event.target.value);
    setAlturaGuard(event.target.value);
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <h1 className="text-4xl font-bold text-gray-700">Hello World</h1>
        <div className="flex flex-col">
          <span className="text-gray-700">{item?.data?.name}</span>
          <span className="text-gray-700">{item?.data?.maxSupply}</span>
          <input
            type="text"
            name="address"
            placeholder="address"
            value={address}
            onChange={onAddressChange}
          />
          <input
            type="text"
            name="alturaGuard"
            placeholder="altura guard code"
            value={alturaGuard}
            onChange={onCodeChange}
          />
          <ul>
            {item?.data?.properties.map(
              (property: ItemProperty, index: number) => (
                <li key={`item-${index}`}>
                  <span className="text-gray-700">{property.name}</span>
                  <span className="text-gray-700">{property.value}</span>
                </li>
              )
            )}
          </ul>
          {isAuthenticated && (
            <ul>
              <li className="text-gray-700">{user?.data?.name}</li>
              <li className="text-gray-700">{user?.data?.address}</li>
              <li className="text-gray-700">{user?.data?.bio}</li>
              <li className="text-gray-700">{user?.data?.socialLink}</li>
            </ul>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
